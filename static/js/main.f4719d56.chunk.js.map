{"version":3,"sources":["App.js","reportWebVitals.js","index.js","img.png"],"names":["initialState","a","b","c","d","x0","y0","Tlim","ndt","niter","epsilon","sol","isRunning","t","X","Y","App","_useState","useState","_useState2","_slicedToArray","state","setState","handleChange","event","name","target","value","values","_objectSpread","_defineProperty","parseFloat","xmax","Math","max","apply","ymax","useEffect","setTimeout","React","createElement","AiOutlineInfoCircle","className","src","img","alt","map","index","key","style","left","floor","bottom","--height","concat","--width","backgroundColor","ceil","_toConsumableArray","Array","top","random","onSubmit","preventDefault","step","i","xi","yi","k","xi_next","yi_next","sqrt","pow","solve","console","log","type","onChange","color","toFixed","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","p"],"mappings":"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","file":"static/js/main.f4719d56.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\nimport img from './img.png'\nimport React from 'react';\n\nconst initialState = {\n  a:1,\n  b:0.1,\n  c:1.5,\n  d:0.075,\n  x0:10,\n  y0: 5,\n  Tlim:10,\n  ndt : 100,\n  niter: 10,\n  epsilon: 0.1,\n  sol: 1,\n  isRunning: false,\n  t:0,\n  X:[],\n  Y:[],\n};\n\nfunction App() {\n  const [state, setState] = useState(initialState);\n  \n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setState(values => ({...values, [name]: parseFloat(value)}))\n  }\n\n  const solve = ()=>{\n    state.X[0] = state.x0\n    state.Y[0] = state.y0\n    let step = state.Tlim / state.ndt\n    if (state.sol === 1){\n      for (let i = 1; i < state.ndt; i++){\n        state.X[i] = (state.X[i-1] + step*state.X[i-1]*(state.a - state.b*state.Y[i-1])) ;\n        state.Y[i] = (state.Y[i-1] + step*state.Y[i-1]*(-state.c + state.d*state.X[i-1]));\n      }\n    } else if (state.sol === 2){\n      for (let i = 1; i< state.ndt; i++){\n        let xi = state.X[i-1];\n        let yi = state.Y[i-1];\n        for (let k=0; k < state.niter; k++){\n          let xi_next = state.X[i-1] + step*xi*(state.a - state.b*yi);\n          let yi_next = state.Y[i-1] + step*yi*(-state.c + state.d*xi);\n          if (Math.sqrt(Math.pow(xi_next-xi,2)+Math.pow(yi_next-yi,2)) < state.epsilon){\n            state.X[i] = xi_next;\n            state.Y[i] = yi_next;\n            break;\n          }\n          xi = xi_next;\n          yi = yi_next;\n        }\n      }\n    } else {\n      for (let i = 1; i< state.ndt; i++){\n        let xi = state.X[i-1];\n        let yi = state.Y[i-1];\n        for (let k=0; k < state.niter; k++){\n          let xi_next = state.X[i-1] + 0.5*step*xi*(state.a - state.b*yi) + 0.5*step*state.X[i-1]*(state.a - state.b*state.Y[i-1]);\n          let yi_next = state.Y[i-1] + 0.5*step*yi*(-state.c + state.d*xi) + 0.5*step*state.Y[i-1]*(-state.c + state.d*state.X[i-1]);\n          if (Math.sqrt(Math.pow(xi_next-xi,2)+Math.pow(yi_next-yi,2)) < state.epsilon){\n            state.X[i] = (xi_next);\n            state.Y[i] = yi_next;\n            break;\n          }\n          xi = xi_next;\n          yi = yi_next;\n        }\n      }\n    }\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    solve();\n    console.log(state.X)\n    console.log(state.Y)\n    setState(values => ({...values, isRunning: ! state.isRunning}))\n    setState(values => ({...values, t: 1}))\n    \n  }\n  const xmax = Math.max.apply(null, state.X);\n  const ymax = Math.max.apply(null, state.Y);\n\n  useEffect(()=>{\n    setTimeout(() => {\n      if (state.t < state.ndt && state.isRunning ){\n        setState(values => ({...values, t: state.t + 1}))\n      }\n    }, 300);\n}, [state.t, state.ndt, state.isRunning, state.X])\n\n  return (\n    <section>\n      <h1>Lotka-Volterra non linear system\n        <span>\n          <AiOutlineInfoCircle/>\n          <div className=\"info\"> \n          <p>The Lotka-Volterra equations, also known as the Lotka-Volterra predator-prey model, \n              are a pair of first-order nonlinear differential equations, frequently used to describe \n              the dynamics of biological systems in which two species interact, one as a predator and \n              the other as prey. The populations change through time according to the pair of equations:\n          </p>\n          <img src={img} alt=\"non linear system\"/>\n          <p>*This model was proposed independently by Alfred James Lotka in 1925 and Vito Volterra\n          in 1926. </p>\n          </div>\n        </span>\n      </h1>    \n      <div className=\"cols\">\n        <div className=\"parameters\">\n          <article className=\"phase-portrait\">\n            <p>Phase Portrait</p>\n            {\n              state.isRunning ?               \n              state.X.map((value,index)=>{\n                if(index === state.t-1){\n                  return <div className=\"point active\" key={index} style={{left:Math.floor(value*250/xmax), bottom:Math.floor(state.Y[index]*240/ymax), \"--height\" : `${Math.floor((state.Y[index]*240/ymax)+3)}px`,\"--width\" : `${300-Math.floor(value*250/xmax)-4}px`}}></div>\n                }else{\n                  return <div className=\"point \" key={index} style={{left:Math.floor(value*250/xmax), bottom:Math.floor(state.Y[index]*240/ymax)}}></div>\n                }\n                \n              }) : <div></div>\n            }          \n          </article>\n\n          <article>\n            <p>Curves</p>\n            {\n              state.isRunning ?               \n              state.X.map((value,index)=>{\n                return (\n                  <div key={index}>\n                  <div className=\"point\" style={{left:Math.floor((index+1)*250/state.ndt), bottom:Math.floor(value*240/xmax ), backgroundColor:'green'}}></div>\n                  <div className=\"point\"  style={{left:Math.floor((index+1)*250/state.ndt), bottom:Math.floor(state.Y[index]*240/xmax), backgroundColor:'red'}}></div> \n                  </div>\n\n                )\n              }): <div></div>\n            } \n          </article>\n        </div>\n        <div className=\"environement\">\n          {state.isRunning ? <h4>Day {state.t} : {Math.ceil(state.X[state.t-1])} Preys & {Math.ceil(state.Y[state.t-1])} Predators</h4> : <h4>Run To Start Simulation</h4>}\n          { \n          state.isRunning ?         \n          [\n            ...Array(state.X[state.t-1] >= 0 ? Math.ceil(state.X[state.t-1]) : 1),\n          ].map((value, index) => (\n            <div className=\"prey\" key={index} style={{top:  Math.floor(Math.random()*500 + 90 ), left: Math.floor(Math.random()*590 + 5 )}}></div>\n          )) : \"\"\n          }\n          {  \n          state.isRunning ?        \n          [\n            ...Array(state.Y[state.t-1] >= 0 ? Math.ceil(state.Y[state.t-1]) : 1),\n          ].map((value, index) => (\n            <div className=\"predator\" key={index} style={{top:Math.floor(Math.random()*500 + 90 ), left:Math.floor(Math.random()*590 + 5 )}}></div>\n          )) : \"\"\n          }\n\n        </div>\n        <div className=\"parameters\">\n          <div className=\"legend\">\n            <div className=\"prey-legend\"> <p>A Prey</p></div>\n            <div className=\"predator-legend\"><p>A Predator</p></div>\n          </div>\n          <form onSubmit={handleSubmit}>\n          <label>Initial Number Of Preys :\n              <input \n                type=\"number\" \n                name=\"x0\" \n                value={state.x0 || \"\"} \n                onChange={handleChange}\n              />\n            </label><br></br>\n            <label>Initial Number Of Predators :\n              <input \n                type=\"number\" \n                name=\"y0\" \n                value={state.y0 || \"\"} \n                onChange={handleChange}\n              />\n            </label><br></br>\n            <label>Reproduction Rate Of Preys :\n              <input \n                type=\"number\" \n                name=\"a\" \n                value={state.a || \"\"} \n                onChange={handleChange}\n              />\n            </label><br></br>\n              <label>Mortality Rate Of Preys :\n                <input \n                  type=\"number\" \n                  name=\"b\" \n                  value={state.b || \"\"} \n                  onChange={handleChange}\n                />\n                </label><br></br>\n                <label>Reproduction Rate Of Predators:\n                <input \n                  type=\"number\" \n                  name=\"c\" \n                  value={state.c || \"\"} \n                  onChange={handleChange}\n                />\n                </label><br></br>\n                <label>Mortality Rate Of Predators :\n                <input \n                  type=\"number\" \n                  name=\"d\" \n                  value={state.d || \"\"} \n                  onChange={handleChange}\n                />\n                </label><br></br>\n                <label>Number Of Days :\n                  <input \n                    type=\"number\" \n                    name=\"ndt\" \n                    value={state.ndt || \"\"} \n                    onChange={handleChange}\n                  />\n                </label><br></br>\n                <label> Solving Method :\n                  <select name=\"sol\" value={state.sol || \"\"} onChange={handleChange}>\n                  <option value=\"1\">Euler Explicite</option>\n                  <option value=\"2\">Euler Implicite</option>\n                  <option value=\"3\">Crank Nicolson</option>\n                </select>\n                </label><br></br>\n                <button type=\"submit\" value={state.isRunning ? \"Restart\" : \"Run\"} style={{color:\"black\", backgroundColor:`${state.isRunning?\"yellow\":\"green\"}`}}>{state.isRunning ? \"Restart\" : \"Run\"}</button>\n          </form>\n\n          <div className=\"histogram\">\n            <div className=\"bar\">\n              {state.isRunning? <p>{((state.X[state.t-1]/(state.X[state.t-1]+state.Y[state.t-1]))*100).toFixed(1)}% of population are preys </p> : <p>0% of population are preys </p>}\n              <div className=\"prey-bar\" style={{\"--width\" : `${ state.isRunning? Math.floor((state.X[state.t-1]/(state.X[state.t-1]+state.Y[state.t-1]))*100) : 0}px`,}}></div>              \n            </div>\n            <div className=\"bar\">\n              {state.isRunning ? <p>{((state.Y[state.t-1]/(state.X[state.t-1]+state.Y[state.t-1]))*100).toFixed(1)}% of population are predators </p> : <p>0% of population are predators </p>}\n              <div className=\"predatore-bar\" style={{\"--width\" : `${state.isRunning? Math.floor((state.Y[state.t-1]/(state.X[state.t-1]+state.Y[state.t-1]))*100) : 0}px `,}}></div>              \n            </div>\n          </div>\n\n          <div className=\"evolution\">\n            <p>Number of preys : {state.isRunning ? Math.ceil(state.X[state.t-1]) : \"\"}</p>\n            <p>Number of predators : {state.isRunning ? Math.ceil(state.Y[state.t-1]) : \"\"}</p>\n            <p>Mortality rate of preys : {state.isRunning ?(state.a*state.Y[state.t-1] ).toFixed(1) : \"\"} </p>\n            <p>Reproduction rate of predators : {state.isRunning ?(state.d*state.X[state.t-1]).toFixed(1) : \"\"} </p>\n          </div>\n        </div>\n\n      </div>\n\n    </section>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App />      \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/img.d97731e6.png\";"],"sourceRoot":""}